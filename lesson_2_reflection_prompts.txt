What happens when you initialize a repository? Why do you need to do it?
A .git file is created.
If I want t track the content and the change made in a file I have to initialize
a git repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The working directory contins all the files of the project.
Repository is the git repository.
Staging area is the temporary area to place the files before we make a git
commit.
We can run git status before committing to see whether we are committing the right directory
or if not we can remove files from the staging area that we have added by mistake by using git reset
name_of_file.

How can you use the staging area to make sure you have one commit per logical
change?
By using staging area we can ensure that there is only one commit per logical
change. We can only add one file that is modified to the staging area and then commit it.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
If we want to make different versions of a working software apart from a current working
official version, we can use branches.
We will merge it to master branch when the feature is fully experimented and tested.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
